[tool.poetry]
name = "prediction-delivery-time"
version = "0.1.0"
description = ""
authors = ["AldoPutraDelfiero12 <apdelfiero@waresix.com>"]
readme = "README.md"
packages = [{include = "prediction_delivery_time"}]

[tool.poetry.dependencies]
python = "^3.9"
pandas = "^2.2.0"
numpy = "^1.26.3"
#pydantic = "^2.5.3"
pydantic = "^1.9.0"
scikit-learn = "^1.4.0"
strictyaml = "^1.7.3"
feature-engine = "^1.6.2"
joblib = "^1.3.2"
#pytest = "^8.0.0"
#black = "^24.1.1"
#flake8 = "^7.0.0"
#mypy = "^1.8.0"
#isort = "^5.13.2"
haversine = "^2.8.1"
xgboost = "^2.0.3"
fastapi = "^0.109.0"
uvicorn = "^0.27.0"
requests = "^2.31.0"
pyarrow = "^15.0.0"
httpx = "^0.26.0"
starlette = "0.35.0"
pandera = "^0.18.0"
#pydantic-settings = "^2.1.0"
#pydantic-settings = "^0.2.5"
sqlalchemy = "^2.0.27"
psycopg2 = "^2.9.9"
evidently = "^0.3.2.1"
protobuf = "3.19.0"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
black = "^24.1.1"
#black = "^20.0.0"
flake8-pyproject = "^1.2.3"
mypy = "^1.8.0"
isort = "^5.13.2"

[tool.poetry.group.test]
optional = true

[tool.poetry.group.test.dependencies]
pytest = "^8.0.0"
pytest-cov = "^4.1.0"
coverage = "^7.4.1"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
mkdocs = "^1.5.3"
mkdocs-material = "^9.5.7"
mkdocstrings = {extras = ["python"], version = "^0.24.0"}
mkdocs-render-swagger-plugin = "^0.1.1"

[tool.poetry.group.semver.dependencies]
#python-semantic-release = "^9.0.3"
python-semantic-release = "^8.0.0"

[tool.semantic_release]
branch = "main"
version_variable = "prediction_delivery_time/__init__.py:__version__"
version_toml = ["pyproject.toml:tool.poetry.version"]
version_source = "tag"
commit_version_number = true # required for version_source = "tag"
tag_commit = true
upload_to_pypi = false
upload_to_release = false
hvcs = "github" # gitlab is also supported

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "-p no:cacheprovider" # deactivating pytest caching.

[tool.coverage.paths]
source = [
  "prediction_delivery_time"
]

[tool.coverage.run]
relative_files = true
source = [
  "prediction_delivery_time"
]
branch = true

[tool.coverage.report]
#show_missing = true
exclude_lines = [
    'if __name__ == "__main__":'
]

[tool.poetry.scripts]
script-training = "prediction_delivery_time.train_pipeline:run_training"
script-predict = "prediction_delivery_time.predict:make_prediction"
script-conftest = "tests.conftest:data_train_test"
script-api = "prediction_delivery_time.serve.app:start"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
skip-string-normalization = true
exclude = ".ipynb" #'^/src/version.py'

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "E266", "W503",]
#extend-ignore = "F401"
#exclude = ["E203", "E266", "W503", "F401",]
max-complexity = 10
per-file-ignores = ['prediction_delivery_time/pipeline.py:F821','./serve/app/database.py:E501']

[tool.mypy]
ignore_errors = true
#disallow_untyped_defs = true
#ignore_missing_imports = true
#no_implicit_optional = true
#show_error_context = true
#show_column_numbers = true
#warn_return_any = true
#warn_unused_ignores = true
#warn_redundant_casts = true
#exclude = ["dist/",]